apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: okteto-express-demo
  title: Express.js
  description: Create a rest api with Express.js and using Okteto as development environment.
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - platform-templates
    - express
    - rest-api
spec:
  owner: veecode/platform
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - componentId
        - oktetoNamespace
      properties:
        componentId:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this app is for.
        oktetoNamespace:
          title: Okteto Namespace
          type: string
          description: Input your desired okteto namespace.

    - title: Spec Configuration
      required:
        - specPublish
        - specPublishBranch
      description: Spec House Configuration
      properties:
        specPublishBranch:
          title: Branch name
          type: string
          default: main
          description: Default branch of spechouse repository
        specTags:
          title: Tags
          type: string
          description: Inputs tags separated by comma(,)
        specPublish:
          type: string
          ui:field: RepoUrlPlatform
          ui:options:
            allowedHosts:
              - github.com

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPlatform
          ui:options:
            allowedHosts:
              - github.com
        visibility:
          title: Repository visibility
          type: string
          enum:
            - public
            - private
          enumNames:
            - 'Public'
            - 'Private'
          default: private

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          componentId: ${{ parameters.componentId }}
          description: ${{ parameters.description }}
          repoUrl: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          owner: "veecode-platform"
          specPublish: ${{ (parameters.specPublish | parseRepoUrl).owner }}/${{ (parameters.specPublish | parseRepoUrl).repo }}
          specPublishRepo: ${{ (parameters.specPublish | parseRepoUrl).repo }}
          specPublishBranch: ${{ parameters.specPublishBranch }}
          specTags: ${{ parameters.specTags }}
          oktetoNamespace:  ${{ parameters.oktetoNamespace }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.componentId }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.visibility }}
        defaultBranch: 'main'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
